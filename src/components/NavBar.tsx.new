// src/components/NavBar.tsx
import React, { useEffect, useState } from 'react';
import AppBar from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import Drawer from '@mui/material/Drawer';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemText from '@mui/material/ListItemText';
import { useTheme, alpha } from '@mui/material/styles';
import useMediaQuery from '@mui/material/useMediaQuery';

const NavBar: React.FC = () => {
  const [solid, setSolid] = useState(false);
  const [mobileOpen, setMobileOpen] = useState(false);
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  
  const sections = ['Timeline', 'Projects', 'Skills', 'Contact'];

  useEffect(() => {
    const hero = document.getElementById('hero');
    const observer = new IntersectionObserver(
      ([entry]) => setSolid(!entry.isIntersecting),
      { rootMargin: '-80px 0px 0px 0px' }
    );
    if (hero) observer.observe(hero);
    return () => observer.disconnect();
  }, []);

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  const drawer = (
    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center', py: 2 }}>
      <Typography variant="h6" sx={{ my: 2, fontWeight: 700 }}>
        Somneel Kumar Saha
      </Typography>
      <List>
        {sections.map((section) => (
          <ListItem key={section} disablePadding>
            <ListItemButton 
              sx={{ 
                textAlign: 'center',
                py: 1.5
              }}
              href={`#${section.toLowerCase()}`}
            >
              <ListItemText 
                primary={section} 
                primaryTypographyProps={{ fontWeight: 600 }}
              />
            </ListItemButton>
          </ListItem>
        ))}
      </List>
    </Box>
  );

  return (
    <AppBar
      position="sticky"
      elevation={solid ? 4 : 0}
      color="transparent"
      sx={{
        backgroundColor: solid ? 
          alpha(theme.palette.background.default, 0.9) : 
          'transparent',
        backdropFilter: solid ? 'blur(10px)' : 'none',
        borderBottom: solid ? `1px solid ${alpha(theme.palette.divider, 0.1)}` : 'none',
        transition: 'all 0.3s ease'
      }}
    >
      <Toolbar 
        sx={{ 
          justifyContent: 'space-between',
          maxWidth: '1800px',
          width: '100%',
          mx: 'auto',
          px: { xs: 2, md: 4 },
          py: { xs: 1, md: 1.5 }
        }}
      >
        <Typography 
          variant="h6" 
          sx={{ 
            fontWeight: 700,
            letterSpacing: '-0.02em',
            fontSize: { xs: '1.3rem', md: '1.5rem' }
          }}
        >
          Somneel Kumar Saha
        </Typography>
        
        {/* Mobile menu button */}
        {isMobile ? (
          <IconButton
            color="inherit"
            aria-label="open drawer"
            edge="end"
            onClick={handleDrawerToggle}
            sx={{ 
              display: { md: 'none' },
              color: theme.palette.text.primary
            }}
          >
            <MenuIcon />
          </IconButton>
        ) : (
          <Box sx={{ display: 'flex', gap: { xs: 0, md: 1 } }}>
            {sections.map(section => (
              <Button 
                key={section} 
                color="inherit" 
                href={`#${section.toLowerCase()}`}
                sx={{ 
                  mx: { xs: 0.5, md: 1 },
                  px: { xs: 1.5, md: 2.5 },
                  py: { xs: 0.75, md: 1 },
                  fontSize: { xs: '0.9rem', md: '1rem' },
                  fontWeight: 600,
                  color: theme.palette.text.primary,
                  borderRadius: '10px',
                  position: 'relative',
                  overflow: 'hidden',
                  '&:hover': {
                    backgroundColor: alpha(theme.palette.primary.main, 0.08),
                    transform: 'translateY(-3px)',
                    transition: 'all 0.3s ease'
                  },
                  transition: 'all 0.3s ease'
                }}
              >
                {section}
              </Button>
            ))}
          </Box>
        )}
      </Toolbar>

      {/* Mobile drawer */}
      <Drawer
        variant="temporary"
        open={mobileOpen}
        onClose={handleDrawerToggle}
        ModalProps={{ keepMounted: true }}
        sx={{
          display: { xs: 'block', md: 'none' },
          '& .MuiDrawer-paper': { width: 280 },
        }}
      >
        {drawer}
      </Drawer>
    </AppBar>
  );
};

export default NavBar;
